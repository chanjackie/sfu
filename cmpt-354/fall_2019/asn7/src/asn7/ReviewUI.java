/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package asn7;

import java.sql.*;
import java.util.ArrayList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jgc11
 */
public class ReviewUI extends javax.swing.JFrame {

    private ConSingleton con;
    private int selectedListingId;

    /**
     * Creates new form WriteReviewUI
     */
    public ReviewUI() {
        initComponents();
        con = ConSingleton.getInstance();
        reviewWriteReviewBtn.setVisible(false);
        reviewBookingsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (reviewBookingsTable.getModel().getRowCount() == 0) {
                    reviewWriteReviewBtn.setVisible(false);
                    return;
                }
                System.out.println(reviewBookingsTable.getValueAt(reviewBookingsTable.getSelectedRow(), 0).toString());
                if (!reviewBookingsTable.getValueAt(reviewBookingsTable.getSelectedRow(), 0).toString().contains("No")) {
                    selectedListingId = Integer.valueOf(reviewBookingsTable.getValueAt(reviewBookingsTable.getSelectedRow(), 1).toString());        
                    reviewWriteReviewBtn.setVisible(true);            
                } else {
                    reviewWriteReviewBtn.setVisible(false);
                }
            }
            
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reviewBookingsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        reviewGuestName = new javax.swing.JTextField();
        reviewShowBookingsBtn = new javax.swing.JToggleButton();
        reviewWriteReviewBtn = new javax.swing.JButton();
        reviewBackBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Write Review"));

        reviewBookingsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Booking ID", "Listing ID", "Guest Name", "Stay From", "Stay To", "Num. of Guests"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reviewBookingsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(reviewBookingsTable);

        jLabel1.setText("Guest Name:");

        reviewShowBookingsBtn.setText("Show Bookings");
        reviewShowBookingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewShowBookingsBtnActionPerformed(evt);
            }
        });

        reviewWriteReviewBtn.setText("Write Review");
        reviewWriteReviewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewWriteReviewBtnActionPerformed(evt);
            }
        });

        reviewBackBtn.setText("Back");
        reviewBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewBackBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reviewGuestName))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(reviewShowBookingsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reviewWriteReviewBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reviewBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(reviewGuestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reviewBackBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(reviewShowBookingsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reviewWriteReviewBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reviewShowBookingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewShowBookingsBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) reviewBookingsTable.getModel();
        String guestName = reviewGuestName.getText();
        if (guestName.isEmpty()) {
            model.setRowCount(0);
            String[] empty = new String[6];
            empty[0] = "No results found";
            model.addRow(empty);
            return;
        }
        String query = "SELECT * FROM bookings WHERE bookings.guest_name = '" + guestName + "';";
        ResultSet rs = con.query(query);
        ArrayList<String[]> dataList = new ArrayList<>();

        try {
            while (rs.next()) {
                String[] dataRow = new String[6];
                dataRow[0] = rs.getString("id");
                dataRow[1] = rs.getString("listing_id");
                dataRow[2] = rs.getString("guest_name");
                dataRow[3] = rs.getString("stay_from");
                dataRow[4] = rs.getString("stay_to");
                dataRow[5] = rs.getString("number_of_guests");
                dataList.add(dataRow);
            }
            rs.close();
        } catch (SQLException se) {
            System.out.println("\nSQL Exception occurred, the state : "
                    + se.getSQLState() + "\nMessage:\n" + se.getMessage() + "\n");
            return;
        }
        model.setRowCount(0);
        for (int i = 0; i < dataList.size(); i++) {
            model.addRow(dataList.get(i));
        }
        if (dataList.isEmpty()) {
            String[] empty = new String[6];
            empty[0] = "No results found";
            model.addRow(empty);
        }
    }//GEN-LAST:event_reviewShowBookingsBtnActionPerformed

    private void reviewBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewBackBtnActionPerformed
        // TODO add your handling code here:
        con.setComingFromUI(false, 0);
        con.setPrevReview(null);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
        this.dispose();
    }//GEN-LAST:event_reviewBackBtnActionPerformed

    private void reviewWriteReviewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewWriteReviewBtnActionPerformed
        // TODO add your handling code here:
        con.setPrevReview(this);
        con.setComingFromUI(true, selectedListingId);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WriteUI().setVisible(true);
            }
        });
        this.setVisible(false);
    }//GEN-LAST:event_reviewWriteReviewBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReviewUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReviewUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReviewUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReviewUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReviewUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reviewBackBtn;
    private javax.swing.JTable reviewBookingsTable;
    private javax.swing.JTextField reviewGuestName;
    private javax.swing.JToggleButton reviewShowBookingsBtn;
    private javax.swing.JButton reviewWriteReviewBtn;
    // End of variables declaration//GEN-END:variables
}
